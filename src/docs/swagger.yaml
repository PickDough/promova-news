definitions:
  createPost.CreatePostCommand:
    properties:
      content:
        minLength: 15
        type: string
      title:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - title
    type: object
  echo.HTTPError:
    properties:
      message: {}
    type: object
  getAllPosts.GetAllPostsQuery:
    properties:
      idOffset:
        type: integer
      limit:
        maximum: 50
        type: integer
    type: object
  model.Posts:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  updatePost.UpdatePostCommand:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
  description: This is a test case for Promova.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Promova News API
  version: "1.0"
paths:
  /posts:
    delete:
      consumes:
      - '*/*'
      operationId: delete-post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete post
    get:
      consumes:
      - application/json
      operationId: get-all-post
      parameters:
      - description: Update post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/getAllPosts.GetAllPostsQuery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Posts'
            type: array
      summary: Get all posts
    post:
      consumes:
      - application/json
      operationId: create-post
      parameters:
      - description: Create post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/createPost.CreatePostCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Posts'
      summary: Create post
  /posts/:id:
    get:
      consumes:
      - '*/*'
      operationId: get-post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Posts'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get post
    put:
      consumes:
      - application/json
      operationId: update-post
      parameters:
      - description: Update post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/updatePost.UpdatePostCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Posts'
      summary: Update post
swagger: "2.0"
